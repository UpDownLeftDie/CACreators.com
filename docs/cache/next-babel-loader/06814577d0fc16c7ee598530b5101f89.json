{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport Card from '../components/card';\nimport fetch from 'isomorphic-unfetch';\nimport moment from 'moment';\n\nlet groups = require('../groups.json');\n\nconst siteTitle = 'Cali Creators MeetUps';\nconst description = \"We're the meetup groups for Twitch, Mixer, streamers, and gamers in California!<br/>Find the closest one to you or come to all our events!\";\nconst url = 'https://cacreators.com';\n\nconst Home = () => {\n  const {\n    0: upcomingTwitchEvents,\n    1: setTwitchEvents\n  } = useState({\n    events: [],\n    loading: true\n  });\n  const {\n    0: upcomingMeetupEvents,\n    1: setMeetupEvents\n  } = useState({\n    events: [],\n    loading: true\n  });\n  useEffect(() => {\n    getUpcomingTwitchEvents().then(twitchEvents => {\n      setTwitchEvents({\n        events: twitchEvents,\n        loading: false\n      });\n    });\n  }, []);\n  useEffect(() => {\n    getUpcomingMeetupEvents().then(meetupEvents => {\n      setMeetupEvents({\n        events: meetupEvents,\n        loading: false\n      });\n    });\n  }, []);\n\n  const findNextEvent = (groups, upcomingEvents) => {\n    return groups.map(group => {\n      const nextEvent = upcomingEvents.find(event => {\n        if (event.chapter.city === group.city) return true;\n        return false;\n      });\n      return _objectSpread(_objectSpread({}, group), {}, {\n        nextEvent: nextEvent || {}\n      });\n    });\n  };\n\n  const renderCards = () => {\n    const upcomingEvents = upcomingTwitchEvents.events.concat(upcomingMeetupEvents.events);\n    const loading = upcomingTwitchEvents.loading || upcomingMeetupEvents.loading;\n    const groupsWithEvents = findNextEvent(groups, upcomingEvents).sort((a, b) => {\n      if (!a.nextEvent.start_date) return 1;\n      if (!b.nextEvent.start_date) return -1;\n      return new Date(a.nextEvent.start_date) - new Date(b.nextEvent.start_date);\n    });\n    return groupsWithEvents.map((groupWithEvent, i) => __jsx(Card, {\n      key: groupWithEvent.name,\n      group: groupWithEvent,\n      loading: loading,\n      totalCards: groupsWithEvents.length,\n      position: i + 1\n    }));\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      minHeight: '100%',\n      position: 'absolute',\n      width: '100%'\n    },\n    className: \"jsx-3821060420\"\n  }, __jsx(Head, null, __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\",\n    className: \"jsx-3821060420\"\n  }), __jsx(\"title\", {\n    className: \"jsx-3821060420\"\n  }, siteTitle), __jsx(\"meta\", {\n    name: \"Description\",\n    content: description.replace('<br/>', ' '),\n    className: \"jsx-3821060420\"\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: siteTitle,\n    className: \"jsx-3821060420\"\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: url,\n    className: \"jsx-3821060420\"\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: `${url}/twitchsocal.gif`,\n    className: \"jsx-3821060420\"\n  }), __jsx(\"meta\", {\n    property: \"og:image:width\",\n    content: \"800\",\n    className: \"jsx-3821060420\"\n  }), __jsx(\"meta\", {\n    property: \"og:image:height\",\n    content: \"800\",\n    className: \"jsx-3821060420\"\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: description.replace('<br/>', ' '),\n    className: \"jsx-3821060420\"\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\",\n    className: \"jsx-3821060420\"\n  }), __jsx(\"meta\", {\n    property: \"og:locale\",\n    content: \"en_US\",\n    className: \"jsx-3821060420\"\n  })), __jsx(\"div\", {\n    className: \"jsx-3821060420\" + \" \" + \"hero\"\n  }, __jsx(\"span\", {\n    className: \"jsx-3821060420\" + \" \" + \"title-wrapper\"\n  }, __jsx(\"h1\", {\n    className: \"jsx-3821060420\" + \" \" + \"title\"\n  }, siteTitle)), __jsx(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: description\n    },\n    className: \"jsx-3821060420\" + \" \" + \"description\"\n  }), __jsx(\"div\", {\n    className: \"jsx-3821060420\" + \" \" + \"row\"\n  }, renderCards())), __jsx(\"div\", {\n    className: \"jsx-3821060420\" + \" \" + \"footer\"\n  }, __jsx(\"p\", {\n    className: \"jsx-3821060420\"\n  }, \"This site is not affiliated or endorsed by Twitch, Mixer, or Meetup.\")), __jsx(_JSXStyle, {\n    id: \"3821060420\"\n  }, [\".hero.jsx-3821060420{width:100%;color:#fff;}\", \".title.jsx-3821060420{margin:0;width:100%;margin-top:50px;line-height:1.15;font-size:48px;font-family:'Knewave',sans-serif;-webkit-animation:colorwipe-jsx-3821060420 6s infinite;animation:colorwipe-jsx-3821060420 6s infinite;background:rgb(255,255,255);background:linear-gradient( 40deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(131,58,180,1) 30%, rgba(253,29,29,1) 55%, rgba(252,176,69,1) 70%, rgba(255,255,255,1) 75%, rgba(255,255,255,1) 100% );background-size:2400px;background-position:0%;-webkit-background-clip:text;-webkit-text-fill-color:transparent;}\", \".title-wrapper.jsx-3821060420{-webkit-filter:drop-shadow(0 5px 5px rgba(0,0,0,0.4));filter:drop-shadow(0 5px 5px rgba(0,0,0,0.4));display:block;width:300px;margin:0 auto;}\", \".title.jsx-3821060420,.description.jsx-3821060420{text-align:center;}\", \".description.jsx-3821060420{font-size:22px;font-weight:300;font-family:'Kanit',sans-serif;}\", \".row.jsx-3821060420{max-width:1000px;margin:65px auto;position:relative;min-height:410px;}\", \".footer.jsx-3821060420{color:#fff;position:absolute;bottom:0;width:100%;text-align:center;font-weight:100;font-style:italic;font-family:sans-serif;}\", \"@media (max-width:900px){.row.jsx-3821060420{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}}\", \"@-webkit-keyframes colorwipe-jsx-3821060420{0%{background-position:0%;}100%{background-position:100%;}}\", \"@keyframes colorwipe-jsx-3821060420{0%{background-position:0%;}100%{background-position:100%;}}\"]));\n};\n\nasync function getUpcomingTwitchEvents() {\n  const cacheBuster = `&${Math.floor(Math.random() * 1000)}`;\n  const twitchReq = await fetch(`https://meetups.twitch.tv/api/search/?result_types=upcoming_event&country_code=Earth${cacheBuster}`).catch(err => {\n    console.log(err);\n  });\n  const twitchJson = await twitchReq.json();\n\n  if (twitchJson) {\n    return twitchJson.results;\n  }\n\n  return [];\n}\n\nasync function getUpcomingMeetupEvents() {\n  const cacheBuster = `&${Math.floor(Math.random() * 1000)}`; // TODO remove hardcoded group name, dynamically get from groups.json\n\n  let meetupUrl = `https://api.meetup.com/ocstreamers/events?&sign=true&photo-host=secure&page=5&has_ended=false${cacheBuster}`;\n  if (process.env.ENV !== 'development') meetupUrl = `https://lym20nhb8j.execute-api.us-west-2.amazonaws.com/dev?url=${meetupUrl}`;\n  const meetupComReq = await fetch(meetupUrl).catch(err => {\n    console.log(err);\n  });\n\n  if (meetupComReq) {\n    const meetupComJson = await meetupComReq.json();\n    return convertMeetupToTwitch(meetupComJson);\n  }\n\n  await new Promise(resolve => setTimeout(resolve, 3000));\n  return [];\n}\n\nfunction convertMeetupToTwitch(meetup) {\n  const meetupList = meetup.map(event => {\n    const city = event.group.localized_location.split(',')[0];\n    const startDate = moment.utc(event.time).utcOffset(event.utc_offset / 3600000).format();\n    return {\n      chapter: {\n        city\n      },\n      url: event.link,\n      start_date: startDate,\n      title: event.name\n    };\n  });\n  return meetupList;\n}\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}