{"version":3,"file":"static/webpack/static/development/pages/index.js.f010815a48cdfb8599d6.hot-update.js","sources":["webpack:///./components/card.js","webpack:///./components/social-icons.js","webpack:///./pages/index.js"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport moment from \"moment\";\nimport SocialIcons from \"../components/social-icons\";\nimport LoadingIcon from \"../components/loading-icon\";\nimport SoonBanner from \"../components/soon-banner\";\n\nconst Card = props => {\n  const { group, loading, totalCards, position } = props;\n  const isFirst = !loading && position === 1;\n  const isLast = !loading && position === totalCards;\n  let backgroundImage = \"\";\n  let socialIcons = null;\n  let startsInSevenDays = null;\n  let nextEvent = {\n    title: \"TBA\",\n    date: \"Click here for updates\",\n    url: loading ? \"#\" : group.url\n  };\n\n  if (!loading) {\n    if (group.path) {\n      backgroundImage = `background-image: url('/static/${group.path}');`;\n    }\n    if (group.links && group.name) {\n      socialIcons = <SocialIcons links={group.links} groupName={group.name} />;\n    }\n\n    if (Object.keys(group.nextEvent).length) {\n      const { url, start_date, title } = group.nextEvent;\n      const sevenDays = moment().add(8, \"days\");\n      startsInSevenDays = moment(start_date).isBefore(sevenDays);\n\n      nextEvent = {\n        ...nextEvent,\n        title,\n        date: moment(start_date).format(\"MMM Do YYYY\"),\n        url: loading ? \"#\" : url\n      };\n    }\n  }\n\n  let cardInfo = (\n    <Fragment>\n      <span className=\"loadingIcon\">\n        <LoadingIcon />\n      </span>\n      <style jsx>{`\n        .loadingIcon {\n          position: absolute;\n          font-size: 100px;\n          top: 50%;\n          right: 50%;\n          transform: translate(50%, -50%);\n        }\n      `}</style>\n    </Fragment>\n  );\n  if (!loading) {\n    cardInfo = (\n      <Fragment>\n        <h4>Next Event</h4>\n        <h3>{group.name}</h3>\n        <h5 className=\"event-title\">{nextEvent.title}</h5>\n        <span className=\"event-date\">{nextEvent.date}</span>\n        <style jsx>{`\n          h4 {\n            font-weight: 700;\n            font-size: 20px;\n            margin: 12px 0 0;\n          }\n          h3 {\n            margin: 0;\n            color: #fff;\n            font-size: 22px;\n            font-weight: 700;\n            position: absolute;\n            bottom: 10px;\n          }\n          .event-date {\n            font-size: 18px;\n            color: #fff;\n            font-weight: 400;\n            text-decoration: overline;\n            margin-top: 8px;\n            display: block;\n          }\n          .event-title {\n            font-weight: 700;\n            font-size: 2em;\n            margin: 12px 0 0;\n            overflow: hidden;\n            max-height: 180px;\n            line-height: 35px;\n          }\n          @media (max-width: 900px) {\n            h4 {\n              font-size: 28px;\n            }\n            h3 {\n              font-size: 30px;\n            }\n            .event-title {\n              max-height: 145px;\n            }\n          }\n        `}</style>\n      </Fragment>\n    );\n  }\n\n  const renderSoonBanner = startsSoon => {\n    if (startsSoon) return <SoonBanner />;\n    return;\n  };\n\n  return (\n    <span\n      className={`card-container ${\n        isFirst ? \"first-card\" : isLast ? \"last-card\" : \"\"\n      }`}\n    >\n      <a href={nextEvent.url} name={group.name}>\n        <div className={`card ${startsInSevenDays ? \"glow\" : \"\"}`}>\n          {renderSoonBanner(startsInSevenDays)}\n          {cardInfo} <span className=\"card-background\"></span>\n        </div>\n      </a>\n      {socialIcons}\n      <style jsx>{`\n        .card-container {\n          position: absolute;\n          display: inline-block;\n          transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n          transform: translateX(-50%);\n          left: 50%;\n        }\n        .first-card {\n          transform: translateX(0%);\n          left: 0%;\n        }\n        .last-card {\n          transform: translateX(-100%);\n          left: 100%;\n        }\n\n        a:link {\n          text-decoration: none;\n        }\n        .card {\n          position: relative;\n          width: 250px;\n          height: 300px;\n          padding: 18px;\n          color: #fff;\n          text-align: left;\n          text-decoration: none;\n          transition: all 150ms, transform 150ms cubic-bezier(0, 0, 0.2, 1);\n          filter: drop-shadow(0 5px 3px rgba(0, 0, 0, 0.4));\n          border-radius: 20px;\n          text-shadow: 0 2px 10px rgba(0, 0, 0, 0.8);\n          word-break: break-word;\n        }\n        .glow {\n          animation: fadein 1.5s ease-out infinite alternate;\n        }\n        @keyframes fadein {\n          from {\n            filter: drop-shadow(0 0 15px rgba(255, 255, 255, 0.2));\n          }\n          to {\n            filter: drop-shadow(0 0 25px rgba(255, 255, 255, 1));\n          }\n        }\n        .card::after {\n          content: \"\";\n          border-radius: 20px;\n          position: absolute;\n          z-index: -1;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          filter: drop-shadow(0 8px 6px rgba(0, 0, 0, 0.3));\n          opacity: 0;\n          transition: all 150ms, transform 150ms cubic-bezier(0, 0, 0.2, 1);\n        }\n        .card:hover {\n          transform: scale(1.06);\n          -webkit-font-smoothing: subpixel-antialiased;\n        }\n        .card:hover::after {\n          opacity: 1;\n        }\n        .card-background {\n          background: ${loading ? \"#3d2769\" : \"#555\"};\n          ${backgroundImage}\n          background-size: cover;\n          background-position: center;\n          width: 100%;\n          height: 100%;\n          position: absolute;\n          left: 0;\n          border-radius: 20px;\n          z-index: -100;\n          top: 0;\n        }\n        .card-background:before {\n          content: \"\";\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          border-radius: 20px;\n          background-color: rgba(0, 0, 0, 0.4);\n        }\n\n        @media (max-width: 900px) {\n          .card-container {\n            position: relative;\n            margin: 0 auto;\n            width: 80%;\n            transform: translateX(0);\n            left: 0%;\n          }\n          .card {\n            width: auto;\n            margin-bottom: 15px;\n          }\n          .card p {\n            font-size: 26px;\n          }\n        }\n      `}</style>\n    </span>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nconst SocialIcons = ({ links, groupName }) => {\n  const icons = links.map(link => {\n    return (\n      <a\n        href={link.url}\n        key={link.site}\n        aria-label={`${groupName}'s ${link.site}`}\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        <i className={`fab fa-${link.site}`} />\n      </a>\n    );\n  });\n  return (\n    <div className=\"socialicons\">\n      {icons}\n      <style jsx>{`\n        .socialicons {\n          display: flex;\n          justify-content: space-around;\n          font-size: 36px;\n          padding: 10px;\n        }\n\n        @supports not (-ms-ime-align: auto) {\n          justify-content: space-evenly !important;\n        }\n        .socialicons :global(a) {\n          color: #fff;\n          text-decoration: none;\n          transition: transform 200ms;\n        }\n        .socialicons :global(a):hover {\n          transform: scale(1.2);\n        }\n        @media (max-width: 900px) {\n          .socialicons {\n            padding: 0 10px 35px;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default SocialIcons;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Card from \"../components/card\";\nimport fetch from \"isomorphic-unfetch\";\nimport moment from \"moment\";\nlet groups = require(\"../groups.json\");\n\nconst siteTitle = \"CA Creators\";\nconst description =\n  \"We're the meetup groups for Twitch, Mixer, streamers, and gamers in California!<br/>Find the closest one to you or come to all our events!\";\nconst url = \"https://cacreators.com\";\n\nconst Home = () => {\n  const [upcomingTwitchEvents, setTwitchEvents] = useState({\n    events: [],\n    loading: true\n  });\n  const [upcomingMeetupEvents, setMeetupEvents] = useState({\n    events: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getUpcomingTwitchEvents().then(twithcEvents => {\n      setTwitchEvents({ events: twithcEvents, loading: false });\n    });\n  }, []);\n\n  useEffect(() => {\n    getUpcomingMeetupEvents().then(meetupEvents => {\n      setMeetupEvents({ events: meetupEvents, loading: false });\n    });\n  }, []);\n\n  const findNextEvent = (groups, upcomingEvents) => {\n    return groups.map(group => {\n      const nextEvent = upcomingEvents.find(event => {\n        if (event.chapter.city === group.city) return true;\n        return false;\n      });\n      return {\n        ...group,\n        nextEvent: nextEvent || {}\n      };\n    });\n  };\n\n  const renderCards = () => {\n    const upcomingEvents = upcomingTwitchEvents.events.concat(\n      upcomingMeetupEvents.events\n    );\n    const loading =\n      upcomingTwitchEvents.loading || upcomingMeetupEvents.loading;\n    const groupsWithEvents = findNextEvent(groups, upcomingEvents).sort(\n      (a, b) => {\n        if (!a.nextEvent.start_date) return 1;\n        if (!b.nextEvent.start_date) return -1;\n        return (\n          new Date(a.nextEvent.start_date) - new Date(b.nextEvent.start_date)\n        );\n      }\n    );\n    return groupsWithEvents.map((groupWithEvent, i) => (\n      <Card\n        key={groupWithEvent.name}\n        group={groupWithEvent}\n        loading={loading}\n        totalCards={groupsWithEvents.length}\n        position={i + 1}\n      />\n    ));\n  };\n\n  return (\n    <div\n      style={{\n        minHeight: \"100%\",\n        position: \"absolute\",\n        width: \"100%\"\n      }}\n    >\n      <Head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{siteTitle}.com</title>\n        <meta\n          name=\"Description\"\n          content={description.replace(\"<br/>\", \" \")}\n        ></meta>\n        <meta property=\"og:title\" content={siteTitle}></meta>\n        <meta property=\"og:url\" content={url}></meta>\n        <meta\n          property=\"og:image\"\n          content={`${url}/static/twitchsocal.gif`}\n        ></meta>\n        <meta property=\"og:image:width\" content=\"800\"></meta>\n        <meta property=\"og:image:height\" content=\"800\"></meta>\n        <meta\n          property=\"og:description\"\n          content={description.replace(\"<br/>\", \" \")}\n        ></meta>\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:locale\" content=\"en_US\" />\n      </Head>\n\n      <div className=\"hero\">\n        <span className=\"title-wrapper\">\n          <h1 className=\"title\">{siteTitle}</h1>\n        </span>\n        <p\n          className=\"description\"\n          dangerouslySetInnerHTML={{ __html: description }}\n        ></p>\n\n        <div className=\"row\">{renderCards()}</div>\n      </div>\n      <div className=\"footer\">\n        <p>\n          This site is not affiliated or endorsed by Twitch, Mixer, or Meetup.\n        </p>\n      </div>\n\n      <style jsx>{`\n        :global(html, body) {\n          height: 100%;\n          margin: 0;\n          padding: 0;\n        }\n        :global(body) {\n          background-color: #9146ff;\n          background-image: url(\"/static/funky-lines.png\");\n          background-size: 600px;\n          font-family: \"Kanit\", sans-serif, Avenir Next, Avenir, Helvetica,\n            sans-serif;\n        }\n        .hero {\n          width: 100%;\n          color: #fff;\n        }\n        .title {\n          margin: 0;\n          width: 100%;\n          margin-top: 50px;\n          line-height: 1.15;\n          font-size: 48px;\n          font-family: \"Knewave\", sans-serif;\n          animation: colorwipe 6s infinite;\n          background: rgb(255, 255, 255);\n          background: linear-gradient(\n            15deg,\n            rgba(255, 255, 255, 1) 0%,\n            rgba(255, 255, 255, 1) 15%,\n            rgba(131, 58, 180, 1) 25%,\n            rgba(253, 29, 29, 1) 50%,\n            rgba(252, 176, 69, 1) 75%,\n            rgba(255, 255, 255, 1) 80%,\n            rgba(255, 255, 255, 1) 100%\n          );\n          background-size: 2400px;\n          background-position: 0%;\n          -webkit-background-clip: text;\n          -webkit-text-fill-color: transparent;\n        }\n        .title-wrapper {\n          filter: drop-shadow(0 5px 5px rgba(0, 0, 0, 0.4));\n          display: block;\n          width: 270px;\n          margin: 0 auto;\n        }\n        .title,\n        .description {\n          text-align: center;\n        }\n        .description {\n          font-size: 22px;\n          font-weight: 300;\n          font-family: \"Kanit\", sans-serif;\n        }\n        .row {\n          max-width: 1000px;\n          margin: 40px auto;\n          position: relative;\n          min-height: 410px;\n        }\n        .footer {\n          color: #fff;\n          position: absolute;\n          bottom: 0;\n          width: 100%;\n          text-align: center;\n          font-weight: 100;\n          font-style: italic;\n          font-family: sans-serif;\n        }\n        @media (max-width: 900px) {\n          .row {\n            display: flex;\n            flex-direction: row;\n            flex-direction: column;\n            align-items: center;\n          }\n        }\n        @keyframes colorwipe {\n          0% {\n            background-position: 0%;\n          }\n          100% {\n            background-position: 100%;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nasync function getUpcomingTwitchEvents() {\n  const cacheBuster = `&${Math.floor(Math.random() * 1000)}`;\n  const twitchReq = await fetch(\n    `https://meetups.twitch.tv/api/search/?result_types=upcoming_event&country_code=Earth${cacheBuster}`\n  ).catch(err => {\n    console.log(err);\n  });\n\n  const twitchJson = await twitchReq.json();\n\n  if (twitchJson) {\n    return twitchJson.results;\n  }\n\n  return [];\n}\n\nasync function getUpcomingMeetupEvents() {\n  const cacheBuster = `&${Math.floor(Math.random() * 1000)}`;\n  // TODO remove hardcoded group name, dynamically get from groups.json\n  const meetupComReq = await fetch(\n    `https://shielded-plateau-06167.herokuapp.com/https://api.meetup.com/ocstreamers/events?&sign=true&photo-host=secure&page=5&has_ended=false${cacheBuster}`\n  ).catch(err => {\n    console.log(err);\n  });\n\n  if (meetupComReq) {\n    const meetupComJson = await meetupComReq.json();\n    return convertMeetupToTwitch(meetupComJson);\n  }\n  await new Promise(resolve => setTimeout(resolve, 3000));\n  vvcccckujuvirbjblkljvfhdkjedcbgrjcbencniivge;\n\n  return [];\n}\n\nfunction convertMeetupToTwitch(meetup) {\n  const meetupList = meetup.map(event => {\n    const city = event.group.localized_location.split(\",\")[0];\n    const startDate = moment\n      .utc(event.time)\n      .utcOffset(event.utc_offset / 3600000)\n      .format();\n    return {\n      chapter: {\n        city\n      },\n      url: event.link,\n      start_date: startDate,\n      title: event.name\n    };\n  });\n\n  return meetupList;\n}\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAEA;AAAA;AADA;AAAA;AACA;AAcA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAJA;AAAA;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AARA;AAAA;AAAA;AAsHA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC5OA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AA6BA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AADA;AAAA;AACA;AADA;AAMA;AACA;AAFA;AALA;AAAA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAFA;AAAA;AAKA;AAAA;AAEA;AAAA;AACA;AAAA;AA1CA;AAAA;AA0IA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAKA;AACA;AACA;AAPA;AAEA;AAFA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAMA;AACA;AACA;AARA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAUA;AAVA;AACA;AADA;AAAA;AAAA;AAaA;AAAA;AACA;AAdA;AAcA;AAdA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AACA;AACA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}