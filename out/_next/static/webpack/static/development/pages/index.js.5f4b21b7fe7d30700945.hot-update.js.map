{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.5f4b21b7fe7d30700945.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\nimport Card from \"../components/card\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport moment from \"moment\";\r\nlet groups = require(\"../groups.json\");\r\n\r\nconst siteTitle = \"CA Creators\";\r\nconst description =\r\n  \"We're the meetup groups for Twitch, Mixer, streamers, and gamers in California!<br/>Find the closest one to you or come to all our events!\";\r\nconst url = \"https://cacreators.com\";\r\n\r\nconst Home = () => {\r\n  const [upcomingTwitchEvents, setTwitchEvents] = useState([]);\r\n  const [upcomingMeetupEvents, setMeetupEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUpcomingTwitchEvents().then(twithcEvents => {\r\n      setTwitchEvents(twithcEvents);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUpcomingMeetupEvents().then(meetupEvents => {\r\n      setMeetupEvents(meetupEvents);\r\n    });\r\n  }, []);\r\n\r\n  const findNextEvent = (groups, upcomingEvents) => {\r\n    return groups.map(group => {\r\n      const nextEvent = upcomingEvents.find(event => {\r\n        if (event.chapter.city === group.city) return true;\r\n        return false;\r\n      });\r\n      return {\r\n        ...group,\r\n        nextEvent: nextEvent || {}\r\n      };\r\n    });\r\n  };\r\n\r\n  const renderCards = () => {\r\n    const upcomingEvents = upcomingTwitchEvents.concat(upcomingMeetupEvents);\r\n    const groupsWithEvents = findNextEvent(groups, upcomingEvents).sort(\r\n      (a, b) => {\r\n        if (!a.nextEvent.start_date) return 1;\r\n        if (!b.nextEvent.start_date) return -1;\r\n        return (\r\n          new Date(a.nextEvent.start_date) - new Date(b.nextEvent.start_date)\r\n        );\r\n      }\r\n    );\r\n    console.log(\"groupsWithEvents\", groupsWithEvents);\r\n    return groupsWithEvents.map(groupWithEvent => {\r\n      <Card groupWithEvent />;\r\n    });\r\n    // return (\r\n    //   <Fragment>\r\n    //     <Card\r\n    //       groupName={\"Twitch La\"}\r\n    //       city={\"Los Angeles\"}\r\n    //       href={\"https://meetups.twitch.tv/los-angeles/\"}\r\n    //       upcomingEvents={upcomingTwitchEvents}\r\n    //     />\r\n    //     <Card\r\n    //       groupName={\"OC Streamers\"}\r\n    //       city={\"Orange\"}\r\n    //       href={\"https://www.meetup.com/ocstreamers\"}\r\n    //       upcomingEvents={upcomingMeetupEvents}\r\n    //     />\r\n    //     <Card\r\n    //       groupName={\"Twitch SD\"}\r\n    //       city={\"San Diego\"}\r\n    //       href={\"https://meetups.twitch.tv/san-diego/\"}\r\n    //       upcomingEvents={upcomingTwitchEvents}\r\n    //     />\r\n    //   </Fragment>\r\n    // );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: \"100%\",\r\n        position: \"absolute\",\r\n        width: \"100%\"\r\n      }}\r\n    >\r\n      <Head>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{siteTitle}.com</title>\r\n        <meta\r\n          name=\"Description\"\r\n          content={description.replace(\"<br/>\", \" \")}\r\n        ></meta>\r\n        <meta property=\"og:title\" content={siteTitle}></meta>\r\n        <meta property=\"og:url\" content={url}></meta>\r\n        <meta\r\n          property=\"og:image\"\r\n          content={`${url}/static/twitchsocal.gif`}\r\n        ></meta>\r\n        <meta property=\"og:image:width\" content=\"800\"></meta>\r\n        <meta property=\"og:image:height\" content=\"800\"></meta>\r\n        <meta\r\n          property=\"og:description\"\r\n          content={description.replace(\"<br/>\", \" \")}\r\n        ></meta>\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:locale\" content=\"en_US\" />\r\n      </Head>\r\n\r\n      <div className=\"hero\">\r\n        <span className=\"title-wrapper\">\r\n          <h1 className=\"title\">{siteTitle}</h1>\r\n        </span>\r\n        <p\r\n          className=\"description\"\r\n          dangerouslySetInnerHTML={{ __html: description }}\r\n        ></p>\r\n\r\n        <div className=\"row\">{renderCards()}</div>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <p>\r\n          This site is not affiliated or endorsed by Twitch, Mixer, or Meetup.\r\n        </p>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        :global(html, body) {\r\n          height: 100%;\r\n          margin: 0;\r\n          padding: 0;\r\n        }\r\n        :global(body) {\r\n          background-color: #9146ff;\r\n          background-image: url(\"/static/funky-lines.webp\");\r\n          background-size: 600px;\r\n          font-family: \"Kanit\", sans-serif, Avenir Next, Avenir, Helvetica,\r\n            sans-serif;\r\n        }\r\n        .hero {\r\n          width: 100%;\r\n          color: #fff;\r\n        }\r\n        .title {\r\n          margin: 0;\r\n          width: 100%;\r\n          margin-top: 50px;\r\n          line-height: 1.15;\r\n          font-size: 48px;\r\n          font-family: \"Knewave\", sans-serif;\r\n          animation: colorwipe 6s infinite;\r\n          background: rgb(255, 255, 255);\r\n          background: linear-gradient(\r\n            15deg,\r\n            rgba(255, 255, 255, 1) 0%,\r\n            rgba(255, 255, 255, 1) 15%,\r\n            rgba(131, 58, 180, 1) 25%,\r\n            rgba(253, 29, 29, 1) 50%,\r\n            rgba(252, 176, 69, 1) 75%,\r\n            rgba(255, 255, 255, 1) 80%,\r\n            rgba(255, 255, 255, 1) 100%\r\n          );\r\n          background-size: 900%;\r\n          background-position: 0%;\r\n          -webkit-background-clip: text;\r\n          -webkit-text-fill-color: transparent;\r\n        }\r\n        .title-wrapper {\r\n          filter: drop-shadow(0 5px 5px rgba(0, 0, 0, 0.4));\r\n          display: block;\r\n        }\r\n        .title,\r\n        .description {\r\n          text-align: center;\r\n        }\r\n        .description {\r\n          font-size: 22px;\r\n          font-weight: 300;\r\n          font-family: \"Kanit\", sans-serif;\r\n        }\r\n        .row {\r\n          max-width: 880px;\r\n          margin: 40px auto;\r\n          display: flex;\r\n          flex-direction: row;\r\n          justify-content: space-around;\r\n        }\r\n        .footer {\r\n          color: #fff;\r\n          position: absolute;\r\n          bottom: 0;\r\n          width: 100%;\r\n          text-align: center;\r\n          font-weight: 100;\r\n          font-style: italic;\r\n          font-family: sans-serif;\r\n        }\r\n        @media (max-width: 840px) {\r\n          .row {\r\n            flex-direction: column;\r\n            align-items: center;\r\n          }\r\n        }\r\n        @keyframes colorwipe {\r\n          0% {\r\n            background-position: 0%;\r\n          }\r\n          35% {\r\n            background-position: 0%;\r\n          }\r\n          100% {\r\n            background-position: 100%;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nasync function getUpcomingTwitchEvents() {\r\n  const cacheBuster = `&${Math.floor(Math.random() * 1000)}`;\r\n  const twitchReq = await fetch(\r\n    `https://meetups.twitch.tv/api/search/?result_types=upcoming_event&country_code=Earth${cacheBuster}`\r\n  ).catch(err => {\r\n    console.log(err);\r\n  });\r\n\r\n  const twitchJson = await twitchReq.json();\r\n\r\n  if (twitchJson) {\r\n    return twitchJson.results;\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nasync function getUpcomingMeetupEvents() {\r\n  const cacheBuster = `&${Math.floor(Math.random() * 1000)}`;\r\n  // TODO remove hardcoded group name, dynamically get from groups.json\r\n  const meetupComReq = await fetch(\r\n    `https://shielded-plateau-06167.herokuapp.com/https://api.meetup.com/ocstreamers/events?&sign=true&photo-host=secure&page=5&has_ended=false${cacheBuster}`\r\n  ).catch(err => {\r\n    console.log(err);\r\n  });\r\n\r\n  if (meetupComReq) {\r\n    const meetupComJson = await meetupComReq.json();\r\n    console.log(meetupComJson);\r\n    return convertMeetupToTwitch(meetupComJson);\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nfunction convertMeetupToTwitch(meetup) {\r\n  const meetupList = meetup.map(event => {\r\n    const city = event.group.localized_location.split(\",\")[0];\r\n    const startDate = moment\r\n      .utc(event.time)\r\n      .utcOffset(event.utc_offset / 3600000)\r\n      .format();\r\n    console.log(startDate);\r\n    return {\r\n      chapter: {\r\n        city\r\n      },\r\n      url: event.link,\r\n      start_date: startDate,\r\n      title: event.name\r\n    };\r\n  });\r\n\r\n  return meetupList;\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1CA;AAAA;AAAA;AA0IA;AACA;AACA;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAKA;AACA;AACA;AAPA;AAEA;AAFA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAiBA;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAMA;AACA;AACA;AARA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAUA;AACA;AAXA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAkBA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}