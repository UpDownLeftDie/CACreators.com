{"version":3,"file":"static/webpack/static/development/pages/index.js.6bfeb23d549734cfd179.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Card from \"../components/card\";\nimport fetch from \"isomorphic-unfetch\";\nimport moment from \"moment\";\nlet groups = require(\"../groups.json\");\n\nconst siteTitle = \"CA Creators\";\nconst description =\n  \"We're the meetup groups for Twitch, Mixer, streamers, and gamers in California!<br/>Find the closest one to you or come to all our events!\";\nconst url = \"https://cacreators.com\";\n\nconst Home = () => {\n  const [upcomingTwitchEvents, setTwitchEvents] = useState({\n    events: [],\n    loading: true\n  });\n  const [upcomingMeetupEvents, setMeetupEvents] = useState({\n    events: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getUpcomingTwitchEvents().then(twithcEvents => {\n      setTwitchEvents({ events: twithcEvents, loading: false });\n    });\n  }, []);\n\n  useEffect(() => {\n    getUpcomingMeetupEvents().then(meetupEvents => {\n      setMeetupEvents({ events: meetupEvents, loading: false });\n    });\n  }, []);\n\n  const findNextEvent = (groups, upcomingEvents) => {\n    return groups.map(group => {\n      const nextEvent = upcomingEvents.find(event => {\n        if (event.chapter.city === group.city) return true;\n        return false;\n      });\n      return {\n        ...group,\n        nextEvent: nextEvent || {}\n      };\n    });\n  };\n\n  const renderCards = () => {\n    const upcomingEvents = upcomingTwitchEvents.events.concat(\n      upcomingMeetupEvents.events\n    );\n    // const loading =\n    //   upcomingTwitchEvents.loading || upcomingMeetupEvents.loading;\n    const loading = setTimeout(() => true, 3000);\n    const groupsWithEvents = findNextEvent(groups, upcomingEvents).sort(\n      (a, b) => {\n        if (!a.nextEvent.start_date) return 1;\n        if (!b.nextEvent.start_date) return -1;\n        return (\n          new Date(a.nextEvent.start_date) - new Date(b.nextEvent.start_date)\n        );\n      }\n    );\n    return groupsWithEvents.map((groupWithEvent, i) => (\n      <Card\n        key={groupWithEvent.name}\n        group={groupWithEvent}\n        loading={loading}\n        totalCards={groupsWithEvents.length}\n        position={i + 1}\n      />\n    ));\n  };\n\n  return (\n    <div\n      style={{\n        minHeight: \"100%\",\n        position: \"absolute\",\n        width: \"100%\"\n      }}\n    >\n      <Head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{siteTitle}.com</title>\n        <meta\n          name=\"Description\"\n          content={description.replace(\"<br/>\", \" \")}\n        ></meta>\n        <meta property=\"og:title\" content={siteTitle}></meta>\n        <meta property=\"og:url\" content={url}></meta>\n        <meta\n          property=\"og:image\"\n          content={`${url}/static/twitchsocal.gif`}\n        ></meta>\n        <meta property=\"og:image:width\" content=\"800\"></meta>\n        <meta property=\"og:image:height\" content=\"800\"></meta>\n        <meta\n          property=\"og:description\"\n          content={description.replace(\"<br/>\", \" \")}\n        ></meta>\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:locale\" content=\"en_US\" />\n      </Head>\n\n      <div className=\"hero\">\n        <span className=\"title-wrapper\">\n          <h1 className=\"title\">{siteTitle}</h1>\n        </span>\n        <p\n          className=\"description\"\n          dangerouslySetInnerHTML={{ __html: description }}\n        ></p>\n\n        <div className=\"row\">{renderCards()}</div>\n      </div>\n      <div className=\"footer\">\n        <p>\n          This site is not affiliated or endorsed by Twitch, Mixer, or Meetup.\n        </p>\n      </div>\n\n      <style jsx>{`\n        :global(html, body) {\n          height: 100%;\n          margin: 0;\n          padding: 0;\n        }\n        :global(body) {\n          background-color: #9146ff;\n          background-image: url(\"/static/funky-lines.webp\");\n          background-size: 600px;\n          font-family: \"Kanit\", sans-serif, Avenir Next, Avenir, Helvetica,\n            sans-serif;\n        }\n        .hero {\n          width: 100%;\n          color: #fff;\n        }\n        .title {\n          margin: 0;\n          width: 100%;\n          margin-top: 50px;\n          line-height: 1.15;\n          font-size: 48px;\n          font-family: \"Knewave\", sans-serif;\n          animation: colorwipe 6s infinite;\n          background: rgb(255, 255, 255);\n          background: linear-gradient(\n            15deg,\n            rgba(255, 255, 255, 1) 0%,\n            rgba(255, 255, 255, 1) 15%,\n            rgba(131, 58, 180, 1) 25%,\n            rgba(253, 29, 29, 1) 50%,\n            rgba(252, 176, 69, 1) 75%,\n            rgba(255, 255, 255, 1) 80%,\n            rgba(255, 255, 255, 1) 100%\n          );\n          background-size: 2400px;\n          background-position: 0%;\n          -webkit-background-clip: text;\n          -webkit-text-fill-color: transparent;\n        }\n        .title-wrapper {\n          filter: drop-shadow(0 5px 5px rgba(0, 0, 0, 0.4));\n          display: block;\n          width: 255px;\n          margin: 0 auto;\n        }\n        .title,\n        .description {\n          text-align: center;\n        }\n        .description {\n          font-size: 22px;\n          font-weight: 300;\n          font-family: \"Kanit\", sans-serif;\n        }\n        .row {\n          max-width: 1000px;\n          margin: 40px auto;\n          position: relative;\n          // display: flex;\n          // flex-direction: row;\n          // justify-content: space-around;\n          min-height: 410px;\n        }\n        .footer {\n          color: #fff;\n          position: absolute;\n          bottom: 0;\n          width: 100%;\n          text-align: center;\n          font-weight: 100;\n          font-style: italic;\n          font-family: sans-serif;\n        }\n        @media (max-width: 900px) {\n          .row {\n            flex-direction: column;\n            align-items: center;\n          }\n        }\n        @keyframes colorwipe {\n          0% {\n            background-position: 0%;\n          }\n          100% {\n            background-position: 100%;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nasync function getUpcomingTwitchEvents() {\n  const cacheBuster = `&${Math.floor(Math.random() * 1000)}`;\n  const twitchReq = await fetch(\n    `https://meetups.twitch.tv/api/search/?result_types=upcoming_event&country_code=Earth${cacheBuster}`\n  ).catch(err => {\n    console.log(err);\n  });\n\n  const twitchJson = await twitchReq.json();\n\n  if (twitchJson) {\n    return twitchJson.results;\n  }\n\n  return [];\n}\n\nasync function getUpcomingMeetupEvents() {\n  const cacheBuster = `&${Math.floor(Math.random() * 1000)}`;\n  // TODO remove hardcoded group name, dynamically get from groups.json\n  const meetupComReq = await fetch(\n    `https://shielded-plateau-06167.herokuapp.com/https://api.meetup.com/ocstreamers/events?&sign=true&photo-host=secure&page=5&has_ended=false${cacheBuster}`\n  ).catch(err => {\n    console.log(err);\n  });\n\n  if (meetupComReq) {\n    const meetupComJson = await meetupComReq.json();\n    return convertMeetupToTwitch(meetupComJson);\n  }\n\n  return [];\n}\n\nfunction convertMeetupToTwitch(meetup) {\n  const meetupList = meetup.map(event => {\n    const city = event.group.localized_location.split(\",\")[0];\n    const startDate = moment\n      .utc(event.time)\n      .utcOffset(event.utc_offset / 3600000)\n      .format();\n    return {\n      chapter: {\n        city\n      },\n      url: event.link,\n      start_date: startDate,\n      title: event.name\n    };\n  });\n\n  return meetupList;\n}\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AADA;AAAA;AACA;AADA;AAMA;AACA;AAFA;AALA;AAAA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1CA;AAAA;AAAA;AA2IA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAKA;AACA;AACA;AAPA;AAEA;AAFA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAMA;AACA;AACA;AARA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAUA;AAVA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AACA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}